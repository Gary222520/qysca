package nju.edu.cn.qysca.service.vulnerability;

import nju.edu.cn.qysca.domain.license.dtos.LicenseBriefDTO;
import nju.edu.cn.qysca.domain.vulnerability.dos.CveDO;
import nju.edu.cn.qysca.domain.vulnerability.dos.CweDO;
import nju.edu.cn.qysca.domain.vulnerability.dtos.CveBriefDTO;
import org.springframework.data.domain.Page;

import java.util.List;

public interface VulnerabilityService {

    /**
     * 根据cve id查找对应的信息
     * @param cveId cve id
     * @return cve漏洞信息
     */
    CveDO findCveById(String cveId);

    /**
     * 获取组件漏洞信息
     * @param name 组件名称
     * @param version 组件版本
     * @param language 组件语言
     * @return 漏洞id列表
     */
    List<String> findVulnerabilities(String name, String version, String language);

    /**
     * 在应用中增加漏洞信息
     * @param name 应用名称
     * @param version 应用版本
     * @param cveId 漏洞Id
     * @return 在应用中增加漏洞信息是否成功
     */
    Boolean addAppVulnerability(String name, String version, String cveId);

    /**
     * 在应用中删除漏洞信息
     * @param name 应用名称
     * @param version 应用版本
     * @param cveId 漏洞Id
     * @return 在应用中删除漏洞信息是否成功
     */
    Boolean deleteAppVulnerability(String name, String version, String cveId);

    /**
     * 根据cwe id查找对应的漏洞类型信息
     * @param cweId cwe id
     * @return cwe漏洞类型信息
     */
    CweDO findCweById(String cweId);

    /**
     * 分页查询应用漏洞列表
     * @param name 应用名称
     * @param version 应用版本
     * @param page 页号
     * @param size 页大小
     *
     * @return 漏洞简明信息列表分页结果
     **/
    Page<CveBriefDTO> getCveList(String name, String version, int page, int size);

    /**
     * 漏洞库界面分页查询漏洞列表
     * @param cveId 漏洞编号
     * @param page 页数
     * @param size 大小
     * @return Page<CveBriefDTO> 漏洞分页信息
     */
    Page<CveBriefDTO> getCvePage(String cveId, int page, int size);
}
