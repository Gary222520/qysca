package nju.edu.cn.qysca.domain.vulnerability;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.Entity;

@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@ApiModel("CVSS2DO")
public class CVSS2DO {

    // 基本信息

    @ApiModelProperty(value = "严重性", example = "HIGH, MEDIUM, LOW")
    private String severity;

    @ApiModelProperty(value = "可利用性分数", example = "0~10")
    private Double exploitabilityScore;

    @ApiModelProperty(value = "影响分数", example = "0~10")
    private Double impactScore;

    @ApiModelProperty(value = "是否接受信息不足", example = "true")
    private Boolean acInsufInfo;

    @ApiModelProperty(value = "是否获得所有权限", example = "true")
    private Boolean obtainAllPrivilege;

    @ApiModelProperty(value = "是否获得用户权限", example = "true")
    private Boolean obtainUserPrivilege;

    @ApiModelProperty(value = "是否获得其他权限", example = "true")
    private Boolean obtainOtherPrivilege;

    @ApiModelProperty(value = "是否需要用户交互", example = "true")
    private Boolean userInteractionRequired;

    @ApiModelProperty(value = "版本", example = "2.0")
    private String version;

    @ApiModelProperty(value = "向量字符串", example = "AV:L/AC:L/Au:N/C:C/I:C/A:C")
    private String vectorString;

    // 可利用性度量（必要）

    @ApiModelProperty(value = "访问向量", example = "{NETWORK, ADJACENT_NETWORK, LOCAL}")
    private String accessVector;

    @ApiModelProperty(value = "访问复杂度", example = "{HIGH, MEDIUM, LOW}")
    private String accessComplexity;

    @ApiModelProperty(value = "认证", example = "{MULTIPLE, SINGLE, NONE}")
    private String authentication;

    // 影响性度量（必要）

    @ApiModelProperty(value = "保密性影响", example = "{NONE, PARTIAL, COMPLETE}")
    private String confidentialityImpact;

    @ApiModelProperty(value = "完整性影响", example = "{NONE, PARTIAL, COMPLETE}")
    private String integrityImpact;

    @ApiModelProperty(value = "可用性影响", example = "{NONE, PARTIAL, COMPLETE}")
    private String availabilityImpact;

    // 基本度量组量化（必要）

    @ApiModelProperty(value = "基本度量组分数", example = "0~10")
    private Double baseScore;

    // 时间度量（非必要）

    @ApiModelProperty(value = "可利用性", example = "UNPROVEN, PROOF_OF_CONCEPT, FUNCTIONAL, HIGH, NOT_DEFINED")
    private String exploitability;

    @ApiModelProperty(value = "补救级别", example = "{OFFICIAL_FIX, TEMPORARY_FIX, WORKAROUND, UNAVAILABLE, NOT_DEFINED}")
    private String remediationLevel;

    @ApiModelProperty(value = "报告置信度", example = "{UNCONFIRMED, UNCORROBORATED, CONFIRMED, NOT_DEFINED}")
    private String reportConfidence;

    // 时间度量组量化（非必要）

    @ApiModelProperty(value = "时间度量组分数", example = "0~10")
    private Double temporalScore;

    // 环境度量（非必要）

    @ApiModelProperty(value = "潜在附带伤害", example = "{NONE, LOW, LOW_MEDIUM, MEDIUM_HIGH, HIGH, NOT_DEFINED}")
    private String collateralDamagePotential;

    @ApiModelProperty(value = "目标分布", example = "{NONE, LOW, MEDIUM, HIGH, NOT_DEFINED}")
    private String targetDistribution;

    @ApiModelProperty(value = "保密性需求", example = "{LOW, MEDIUM, HIGH, NOT_DEFINED}")
    private String confidentialityRequirement;

    @ApiModelProperty(value = "完整性需求", example = "{LOW, MEDIUM, HIGH, NOT_DEFINED}")
    private String integrityRequirement;

    @ApiModelProperty(value = "可用性需求", example = "{LOW, MEDIUM, HIGH, NOT_DEFINED}")
    private String availabilityRequirement;

    // 环境度量组量化（非必要）

    @ApiModelProperty(value = "环境度量组分数", example = "0~10")
    private Double environmentalScore;

}
